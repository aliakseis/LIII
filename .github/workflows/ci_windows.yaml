name: CI - Windows

on:
  workflow_dispatch:

permissions: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: ${{ github.head_ref != '' }}

jobs:
  build:
    runs-on: windows-latest
    permissions:
      actions: write

    strategy:
      matrix:
        platform: [x86, x64]
        include:
          - platform: x86
            arch: Win32
            qt_arch: win32_msvc2019
            boost_arch: 32
            openssl_root_dir: "${{ github.workspace }}/imports/OpenSSL/x86"
          - platform: x64
            arch: x64
            qt_arch: win64_msvc2019_64
            boost_arch: 64
            openssl_root_dir: "${{ github.workspace }}/imports/OpenSSL/x64"

    env:
      boost_path: "${{ github.workspace }}/../boost"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup devcmd
        uses: ilammy/msvc-dev-cmd@v1

      - name: Install build tools
        run: |
          if ((Get-Command "ninja.exe" -ErrorAction SilentlyContinue) -eq $null) {
             choco install ninja
          }
          where.exe ninja
          ninja --version

      - name: Install boost
        env:
          BOOST_MAJOR_VERSION: "1"
          BOOST_MINOR_VERSION: "86"
          BOOST_PATCH_VERSION: "0"
        run: |
          $boost_url="https://archives.boost.io/release/${{ env.BOOST_MAJOR_VERSION }}.${{ env.BOOST_MINOR_VERSION }}.${{ env.BOOST_PATCH_VERSION }}/source/boost_${{ env.BOOST_MAJOR_VERSION }}_${{ env.BOOST_MINOR_VERSION }}_${{ env.BOOST_PATCH_VERSION }}.tar.gz"
          $boost_url2="https://sourceforge.net/projects/boost/files/boost/${{ env.BOOST_MAJOR_VERSION }}.${{ env.BOOST_MINOR_VERSION }}.${{ env.BOOST_PATCH_VERSION }}/boost_${{ env.BOOST_MAJOR_VERSION }}_${{ env.BOOST_MINOR_VERSION }}_${{ env.BOOST_PATCH_VERSION }}.tar.gz"
          curl -L -o "${{ runner.temp }}/boost.tar.gz" "$boost_url"
          tar -xf "${{ runner.temp }}/boost.tar.gz" -C "${{ github.workspace }}/.."
          if ($LastExitCode -ne 0)
          {
            curl -L -o "${{ runner.temp }}/boost.tar.gz" "$boost_url2"
            tar -xf "${{ runner.temp }}/boost.tar.gz" -C "${{ github.workspace }}/.."
          }
          move "${{ github.workspace }}/../boost_*" "${{ env.boost_path }}"
          cd "${{ env.boost_path }}"
          .\bootstrap.bat
          .\b2.exe address-model=${{ matrix.boost_arch }} stage --stagedir=.\ --with-headers --with-system --with-chrono --with-random --with-atomic --with-date_time

      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: "5.15.2"
          arch: ${{ matrix.qt_arch }}
          archives: qtbase qttools
          cache: true

      - name: Set OPENSSL_ROOT_DIR environment variable
        run: echo "OPENSSL_ROOT_DIR=${{ github.workspace }}/imports/OpenSSL/${{ matrix.platform }}" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Build LIII
        run: |
          $BOOST_PATH_UNIX = $Env:boost_path -replace '\\', '/'
          cmake `
            -B build `
            -G "Visual Studio 17 2022" `
            -A ${{ matrix.arch }} `
            -DCMAKE_BUILD_TYPE=RelWithDebInfo `
            -DCMAKE_EXPORT_COMPILE_COMMANDS=ON `
            -DBOOST_ROOT="$BOOST_PATH_UNIX" `
            -DCMAKE_PREFIX_PATH="$BOOST_PATH_UNIX" `
            -DMSVC_RUNTIME_DYNAMIC=ON `
            -DVERBOSE_CONFIGURE=ON
          cmake --build build --config RelWithDebInfo
          cmake --install build --config RelWithDebInfo

      - name: Copy OpenSSL dlls
        run: Copy-Item -Path "${{ github.workspace }}/imports/OpenSSL/${{ matrix.platform }}/bin/*.dll" -Destination "./build/bin/" -Force -ErrorAction SilentlyContinue

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-${{matrix.platform}}
          path: ./build/bin
